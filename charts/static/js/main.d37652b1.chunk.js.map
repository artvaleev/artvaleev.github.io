{"version":3,"sources":["Recharts.jsx","Victory.jsx","Charts.jsx","App.js","serviceWorker.js","index.js"],"names":["data","name","uv","pv","amt","pieData01","value","pieData02","Recharts","width","height","strokeDasharray","dataKey","y","stroke","stackId","fill","type","cx","cy","outerRadius","innerRadius","label","PureComponent","COLORS","Victory","className","domainPadding","x","theme","VictoryTheme","material","colorScale","map","v","i","Math","random","index","key","style","a","Date","b","this","radius","datum","Charts","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d37652b1.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine, LineChart, Line, PieChart, Pie,\n} from 'recharts';\n\nconst data = [\n    {\n      name: 'Metric A', uv: 4000, pv: 2400, amt: 2400,\n    },\n    {\n      name: 'Metric B', uv: -3000, pv: -1398, amt: -2210,\n    },\n    {\n      name: 'Metric C', uv: -2000, pv: -9800, amt: -2290,\n    },\n    {\n      name: 'Metric D', uv: 2780, pv: 3908, amt: 2000,\n    },\n    {\n      name: 'Metric E', uv: -1890, pv: -4800, amt: -2181,\n    },\n    {\n      name: 'Metric F', uv: 2390, pv: 3800, amt: 2500,\n    },\n    {\n      name: 'Metric G', uv: 3490, pv: 4300, amt: 2100,\n    },\n  ];\n\nconst pieData01 = [\n  { name: 'Metric A', value: 400 },\n  { name: 'Metric B', value: 300 },\n  { name: 'Metric C', value: 300 },\n  { name: 'Metric D', value: 200 },\n];\nconst pieData02 = [\n  { name: 'Metric E', value: 100 },\n  { name: 'Metric F', value: 80 },\n  { name: 'Metric J', value: 40 },\n  { name: 'Metric K', value: 30 },\n  { name: 'Metric L', value: 50 },\n  { name: 'Metric M', value: 100 },\n  { name: 'Metric N', value: 200 },\n  { name: 'Metric O', value: 150 },\n  { name: 'Metric P', value: 50 },\n];\n\nexport class Recharts extends PureComponent {\n  render() {\n    return (\n        <>\n    <h3>Library: Recharts</h3>\n      <i>Customized: colors</i>\n      <BarChart\n        width={600}\n        height={400}\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Legend />\n        <Bar dataKey=\"pv\" name=\"Value name 1\" stackId=\"a\" fill=\"#D21A24\" />\n        <Bar dataKey=\"uv\" name=\"Value name 2\" stackId=\"a\" fill=\"#EBB62D\" />\n        <Bar dataKey=\"amt\" name=\"Value name 3\" stackId=\"a\" fill=\"#2084AD\" />\n      </BarChart>\n      <br />\n      <br />\n      <LineChart\n        width={600}\n        height={400}\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"pv\" name=\"Value name 1\" stroke=\"#D21A24\" />\n        <Line type=\"monotone\" dataKey=\"uv\" name=\"Value name 2\" stroke=\"#EBB62D\" />\n        <Line type=\"monotone\" dataKey=\"amt\" name=\"Value name 3\" stroke=\"#2084AD\" />\n      </LineChart>\n      <br />\n      <br />\n      <PieChart width={400} height={400}>\n        <Pie data={pieData01} dataKey=\"value\" cx={200} cy={200} outerRadius={60} fill=\"#D21A24\" />\n        <Pie data={pieData02} dataKey=\"value\" cx={200} cy={200} innerRadius={70} outerRadius={90} fill=\"#EBB62D\" label />\n        <Tooltip />\n      </PieChart>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { VictoryChart, VictoryTheme, VictoryStack, VictoryBar, VictoryLine, VictoryTooltip, VictoryPie, VictoryLabel } from \"victory\";\n\nconst getBarData = () => {\n  return [1, 2, 3].map((v, i) => {\n    return [\n      { x: 1, y: Math.random(), label: `Metric label ${i}1` },\n      { x: 2, y: Math.random(), label: `Metric label ${i}2` },\n      { x: 3, y: Math.random(), label: `Metric label ${i}3` },\n    ];\n  });\n};\n\nconst COLORS = [\"D21A24\", \"EBB62D\", \"2084AD\", \"#64B316\", \"#002B3E\"];\nexport const Victory = () => \n(\n  <div className=\"victoryChart\">\n    <h3>Library: Victory</h3>\n    <i>Customized: colors</i>\n    <VictoryChart domainPadding={{ x: 50 }} width={600} height={400} theme={VictoryTheme.material}>\n      <VictoryStack colorScale={COLORS}>\n        {getBarData().map((data, index) => {\n          return <VictoryBar key={index} data={data} />;\n        })}\n      </VictoryStack>\n    </VictoryChart>\n    <br />\n    <br />\n    <VictoryChart width={600} height={400} theme={VictoryTheme.material}>\n      <VictoryLine\n        style={{\n          data: { stroke: \"#64B316\" }\n        }}\n        data={[\n          { a: new Date(1982, 1, 1), b: 125, get label(){ return this.b} },\n          { a: new Date(1987, 1, 1), b: 257, get label(){ return this.b} },\n          { a: new Date(1993, 1, 1), b: 345, get label(){ return this.b} },\n          { a: new Date(1997, 1, 1), b: 515, get label(){ return this.b} },\n          { a: new Date(2001, 1, 1), b: 132, get label(){ return this.b} },\n          { a: new Date(2005, 1, 1), b: 305, get label(){ return this.b} },\n          { a: new Date(2011, 1, 1), b: 270, get label(){ return this.b} },\n          { a: new Date(2015, 1, 1), b: 470, get label(){ return this.b} }\n        ]}\n        x=\"a\"\n        y=\"b\"\n      />\n      <VictoryLine\n        style={{\n          data: { stroke: \"#2084AD\" }\n        }}\n        data={[\n          { a: new Date(1982, 1, 1), b: 60, get label(){ return this.b} },\n          { a: new Date(1987, 1, 1), b: 120, get label(){ return this.b} },\n          { a: new Date(1993, 1, 1), b: 220, get label(){ return this.b} },\n          { a: new Date(1997, 1, 1), b: 452, get label(){ return this.b} },\n          { a: new Date(2001, 1, 1), b: 11, get label(){ return this.b} },\n          { a: new Date(2005, 1, 1), b: 166, get label(){ return this.b} },\n          { a: new Date(2011, 1, 1), b: 70, get label(){ return this.b} },\n          { a: new Date(2015, 1, 1), b: 170, get label(){ return this.b} }\n        ]}\n        x=\"a\"\n        y=\"b\"\n      />\n    </VictoryChart>\n    <br />\n    <br />\n    <VictoryPie\n      width={600}\n      height={400}\n      data={[\n        { x: \"Metric 1\", y: 35 },\n        { x: \"Metric 2\", y: 40 },\n        { x: \"Metric 3\", y: 55 },\n        { x: \"Metric 4\", y: 40 },\n        { x: \"Metric 5\", y: 55 }\n      ]}\n      colorScale={COLORS}\n      radius={({ datum }) => 60 + datum.y * 1.1}\n    />\n  </div>\n);\n","import React, { PureComponent } from 'react';\nimport { Recharts } from './Recharts';\nimport { Victory } from './Victory';\n\n\nexport class Charts extends PureComponent {\n  render() {\n    return (\n        <>\n      <Recharts />\n      <hr />\n      <Victory />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Charts } from './Charts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Charts />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}